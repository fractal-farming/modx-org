/*******************************
         Theme Overrides
*******************************/

// Change font size inside segments, since they were set to 1rem after SUI 2.2 update
// @todo: investigate

.ui.segments .segment,
.ui.segment {
    font-size: @fontSize;
}

// Segment containing the header of the page
.masthead .segment {
    padding: 3em 0;
}

// Segment containing a layout added through CB
.ui.stripe.segment {
    padding: 4em 0;

    // Regulate whitespace between main header and preceding containers
    //.main.header + &.white {
    //    padding-top: 2em;
    //}
    //.main.header + &:not(.white) {
    //    margin-top: 3em;
    //}

    // Regulate whitespace and remove border of segments in detail templates
    [id*="detail"] #main &.white {
        border-bottom: none !important;

        + .white {
            padding-top: 0;
        }
    }

    // Make boxes out of non-white segments in detail templates
    [id*="detail"] #main &:not(.white) {
        margin-bottom: 4em;
        padding: 0;
        border-radius: @defaultBorderRadius;

        + .white {
            padding-top: 0;
        }

        > .container {
            padding: 2em;
        }
    }

    // Different vertical rhythm for mobile and tablet
    @media screen and (max-width: @tabletBreakpoint) {
        padding: 2em 0;
    }
    
    // Set background on white segments
    &.white {
        background-color: @white;
        z-index: 0; // Fix in case container positioning is absolute
    }

    // Add extra colored segments
    &.primary-color {
        background-color: @lightPrimaryColor;
        z-index: 0; // Fix in case container positioning is absolute

        &.inverted {
            background-color: @primaryColor !important;
            color: @white !important;
        }
    }
    &.secondary-color {
        background-color: @lightSecondaryColor;
        z-index: 0; // Fix in case container positioning is absolute

        &.inverted {
            background-color: @secondaryColor !important;
            color: @white !important;
        }
    }

    // Link styling for inverted segments in content area
    #content &.inverted a:not(.button) {
        color: @white;
        border-bottom: 2px solid fade(@white, 60);
        &:hover {
            border-bottom: 2px solid @white;
        }
    }
}

// Segment with a pointing arrow on one side, for indicating quoted content
.ui.pointing.segment {
    @triangleSize: 13px;
    position: relative;

    // All pointers
    &:after,
    &:before {
        border: solid transparent;
        content: " ";
        height: 0;
        width: 0;
        position: absolute;
        pointer-events: none;
    }

    &:after {
        border-color: rgba(255, 255, 255, 0);
        border-width: @triangleSize;
    }
    &:before {
        border-color: rgba(222, 222, 222, 0);
        border-width: @triangleSize + 1px;
    }

    // Left pointer
    &.left {
        &:after,
        &:before {
            right: 100%;
            top: 50%;
        }
        &:after {
            border-right-color: @secondaryBackground;
            margin-top: -@triangleSize;
        }
        &:before {
            border-right-color: @borderColor;
            margin-top: -@triangleSize - 1px;
        }
    }

    // Down pointer
    &.down {
        &:after,
        &:before {
            top: 100%;
            left: 50%;
        }
        &:after {
            border-top-color: @secondaryBackground;
            border-width: @triangleSize;
            margin-left: -@triangleSize;
        }
        &:before {
            border-top-color: @borderColor;
            margin-left: -@triangleSize - 1px;
        }
    }

    // Change background to white on colored segments
    .stripe.segment:not(.white) & {
        background: #fff;
        &.left:after {
            border-right-color: #fff;
        }
        &.down:after {
            border-top-color: #fff;
        }
    }

    // Set pointer positions for specific segments
    .publication &,
    .list & {
        &.down:after,
        &.down:before {
            left: 33px;
        }
    }
    .testimonial & {
        &.left:after,
        &.left:before {
            top: 6rem;
        }
    }
}

// Segment containing an image that needs to be snapped to one of the edges
.ui.snapped.segment {
    @media only screen and (min-width: @computerBreakpoint) {
        padding-bottom: 0;
        overflow: hidden;

        // Give the first grid inside some negative margin, to cut off the bottom of the image
        > .container > .grid {
            margin-bottom: -2rem;

            // Counter the negative margin of the grid to stay middle aligned
            .middle.aligned.column {
                margin-top: -2rem;
            }
        }
    }
}

// Segment containing an image that needs to be inflated beyond it's containers' dimensions
.ui.inflated.segment {
    @media only screen and (min-width: @tabletBreakpoint) {
        > .container > .grid {
            > .column > .image {
                max-width: none;
                width: 150%;
                float: right;
            }

            // Reverse float to align image with correct edge
            &.reversed > .column > .image {
                float: left;
            }
        }
    }
}

