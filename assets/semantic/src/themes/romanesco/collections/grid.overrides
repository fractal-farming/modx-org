/*******************************
         Theme Overrides
*******************************/

// Give nested grids some vertical space
.ui.nested.grid {
    // Only in the Content sections
    #content & {
        margin-bottom: 2rem;
    }
    // Add top margin for all nested grids that follow another element
    #content * + & {
        margin-top: 2rem;
    }

    // Separate articles more clearly in Publication overview
    > .column.publication {
        margin-bottom: 4rem;
    }
}

// Additional styles for wireframes inside the front-end pattern library
.ui.wireframe.grid {
    > .column:not(:last-child),
    .nested.grid {
        margin-bottom: -1rem !important;
    }
    .nested.grid > .column:not(:last-child) {
        margin-right: -1rem;
    }
    .segment {
        box-shadow: none;
        border-radius: 0;
    }
}

// Make sure column padding is correctly set on mobile
// This is probably a bug in Semantic UI
// @todo: create issue / testcase on Github
.ui.grid.container > .column,
.ui.container .grid:not(.nested) > .column {
    @media only screen and (max-width: @largestMobileScreen) {
        padding-left: 0 !important;
        padding-right: 0 !important;

        // Nested stackable grids are negatively affected by this change
        .ui.stackable.grid {
            margin-left: 0 !important;
            margin-right: 0 !important;
        }
    }
}

// The HeaderVertical template requires a few overrides
#header-vertical {
    #header {
        margin: 0;
        padding: 0.5em 1em;

        @media only screen and (min-width: @tabletBreakpoint) {
            position: fixed;
            width: 15rem;
            min-height: 100%;
            padding: 3em 1em;
        }
        @media only screen and (min-width: @computerBreakpoint) {
            width: 20%;
        }
    }
    #main {
        // Use flexbox to stretch the main content area vertically
        display: flex;
        flex-direction: column;
        min-height: 100vh;

        #content {
            flex: 1;
        }
        #footer {
            flex: 0;
        }

        @media only screen and (min-width: @tabletBreakpoint) {
            margin-left: 15rem;
        }
        @media only screen and (min-width: @computerBreakpoint) {
            margin-left: 20%;
        }
    }
}